9.1   软件架构概述
9.1.1   软件架构的定义
9.1.2   软件架构的重要性
9.1.3   架构的模型
9.2   架构需求与软件质量属性
9.2.1   软件质量属性
9.2.2   6个质量属性及实现
9.3   软件架构风格
9.3.1   软件架构风格分类
9.3.2   数据流风格
9.3.3   调用/返回风格
9.3.4   独立构件风格
9.3.5   虚拟机风格
9.3.6   仓库风格
9.4   层次系统架构风格
9.4.1   二层及三层 C/S 架构风格
9.4.2   B/S 架构风格
9.4.3   MVC 架构风格
9.4.4   MVP 架构风格
9.5   面向服务的架构
9.5.1   SOA 概述
9.5.2   SOA 的关键技术
9.5.3   SOA 的实现方法
9.5.4   微服务
9.6   架构设计
9.7   软件架构文档化
9.8   软件架构评估
9.8.1   软件架构评估的方法
9.8.2   架构的权衡分析法
9.8.3   成本效益分析法
9.9   构件及其复用
9.9.1   商用构件标准规范
9.9.2   应用系统簇与构件系统
9.9.3   基于复用开发的组织结构
9.10   产品线及系统演化
9.10.1   复用与产品线
9.10.2   基于产品线的架构
9.10.3   产品线的开发模型
9.10.4   特定领域软件架构
9.10.5   架构及系统演化
9.11   软件架构视图
9.11.1   软件视图的分类
9.11.2   模块视图类型及其风格
9.11.3   C&C视图类型及其风格
9.11.4   分配视图类型及其风格
9.11.5   各视图类型间的映射关系